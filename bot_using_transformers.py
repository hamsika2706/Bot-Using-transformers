# -*- coding: utf-8 -*-
"""bot_using_transformers.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d1GcOx60e9Uk5fHSlcqVZo69hzZJzz-L
"""

!pip install SpeechRecognition

import speech_recognition as sr
!pip install pydub

model=sr.Recognizer()

def audio_to_text():
  mp3_file=r'/content/class.mp3'
from pydub import AudioSegment
from pydub.playback import play
sound=AudioSegment.from_mp3(mp3_file)
sound.export('audio.wav',format='wav')
audio_file=r'/content/audio.wav'
with sr.AudioFile(audio_file) as source:
  audio_data=model.record(source)
  text=model.recognize_google(audio_data)
  print(text)

!pip install transformers
from transformers import pipeline

summarize=pipeline("summarization")
  txt=input("Enter the text: ")

res=summarize(txt)

res

from transformers import pipeline
qa_pipeline = pipeline("question-answering")
def ask_user_questions():
    context = '''summary_text': " Recursion is just another way to create a loop but infinite Loops aren't very useful in practice . Recursive functions are not the right choice in every situation but they are very good for tree and graph traversals . In the next video I'll explain how to improve this with memoization'''

    while True:
        user_question = input("Ask a question (or type 'exit' to quit): ").lower()
        if user_question == 'exit':
            print("Goodbye!")
            break
        result = qa_pipeline(question=user_question, context=context)
        print("Answer:", result['answer'])
        continue_choice = input("Do you want to ask another question? (yes/no): ").lower()
        if continue_choice != 'yes':
          print("Goodbye!")
          # Corrected indentation for the break statement
          break  # Exit if the user does not want to continue
ask_user_questions()

text_input =input('enter some text')
analyzer = pipeline("sentiment-analysis")
res = analyzer(text_input)
print(res)

